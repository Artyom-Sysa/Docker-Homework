version: '3.4'

x-rmq-variables: &rabbit-mq_variables
  RABBITMQ_DEFAULT_USER: root
  RABBITMQ_DEFAULT_PASS: root

x-pg-common-variables: &pg_variables
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: BlockData

services:
  rabbit-mq:
    image: rabbitmq:3.8.14-management
    hostname: 'rmq'
    restart: always
    volumes:
      - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
      - ./volumes/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - 15672:15672
    environment: *rabbit-mq_variables
    networks:
      local:
        ipv4_address: 10.1.0.101

  redis:
    image: redis:6.2.1-alpine
    hostname: 'redis'
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./volumes/redis-data:/data
    healthcheck:
      test: [ 'CMD', 'redis-cli','ping' ]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      local:
        ipv4_address: 10.1.0.102

  postgres:
    image: postgres:13.2-alpine
    hostname: 'postgres'
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    environment: *pg_variables
    ports:
      - 5432:5432
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data
      - ./init-sql.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      local:
        ipv4_address: 10.1.0.103

  publisher:
    build: ./publisher
    environment:
      <<: *rabbit-mq_variables
      FETCH_BLOCKS_INTERVAL_MS: 5000
    env_file:
      - configs/publisher/.env.publisher
    depends_on:
      - rabbit-mq
      - postgres
    restart: always
    healthcheck:
      test: curl -sS http://127.0.0.1:3000/health || echo 1
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      local:
        ipv4_address: 10.1.0.104

  consumer:
    build: ./consumer
    environment:
      <<: *rabbit-mq_variables
      <<: *pg_variables
    depends_on:
      - rabbit-mq
      - postgres
      - redis
    restart: always
    healthcheck:
      test: curl -sS http://127.0.0.1:3000/health || echo 1
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      local:
        ipv4_address: 10.1.0.105

networks:
  local:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.1.0.0/24